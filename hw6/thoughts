LVQ seems like an easy problem. Laid out well in notes.

http://jsalatas.ictpro.gr/implementation-of-competitive-learning-networks-for-weka/

I like the Voronoi separation:
d(x, \hat{x}) = ( x - \hat{x})^T * (x - \hat{x})

Note that output neuron is:
min_{\forall j} d(x_{i}, w_{j})

Update rule:
if C_{w_{j}} == C_{x_{i}}
   w_{j}(k+1) = w_{j}(k) + \mu_{k}[x_i - w_{j}(k)]

if C_{w_{j}} != C_{x_{i}}
   w_{j}(k+1) = w_{j}(k) - \mu_{k}[x_i - w_{j}(k)]
